#!/usr/bin/python

# Nagios plugin to check temperature data from
# Temperature @lert networked temperature logging
# device
#
# This software is released under an MIT license
# copyright (c) 2018 Hilary B. Bisenieks

import urllib2
import xml.etree.ElementTree as ET
import sys

# if no arguments, throw an error and exit
if len(sys.argv) == 1:
    sys.exit(3)

# construct url from host-address, specific to xml feed from devide
url = "http://" + sys.argv[1] + "/xmlfeed.rb"
# grab xml data
xml = urllib2.urlopen(url)
# parse data
tree = ET.parse(xml)
root = tree.getroot()

# get variables
temp_max = float(root[4][0][0][1].text)
temp_min = float(root[4][0][0][2].text)
temp_current = float(root[4][0][0][0].text)
alarm_status = int(root[4][0][0][3].text)
temp_units = root[2].text
sensor_error = int(root[5].text)

if temp_current < temp_min and alarm_status == 1:
    # if temp too low, exit 2
    status = "CRITICAL - Temperature too low"
    exit_code = 2
elif temp_current > temp_max and alarm_status == 1:
    # if temp too high, exit 2
    status = "CRITICAL - Temperature too high"
    exit_code = 2
elif not sensor_error == 0:
    # if sensor in error state, exit 3
    status = "UNKNOWN - Error reading temperature"
    exit_code = 3
else:
    # if no problems, exit 0
    status = "OK"
    exit_code = 0

# return perfdata and exit
print status, ":", temp_current, temp_units
sys.exit(exit_code)
